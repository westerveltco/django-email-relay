name: release

on:
  release:
    types: [published]

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  pypi:
    runs-on: ubuntu-latest
    needs: test
    environment: release
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          pyproject-file: pyproject.toml

      - name: Build package
        run: |
          uv build

      - name: Upload release assets to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ./dist/*

      - name: Publish to PyPI
        run: |
          uv publish

  docker:
    runs-on: ubuntu-latest
    needs: check
    environment: release
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .dockerfiles/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
