name: test

on:
  push:
    branches: main
  pull_request:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  test:
    name: Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        django-version: ['3.2', '4.1', '4.2', 'main']
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        allow-prereleases: true

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip nox

    - name: Run tests
      run: |
        python -m nox --session "tests-${{ matrix.python-version }}(django='${{ matrix.django-version }}')"

  tests:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: OK
      if: ${{ !(contains(needs.*.result, 'failure')) }}
      run: exit 0
    - name: Fail
      if: ${{ contains(needs.*.result, 'failure') }}
      run: exit 1

  types:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: wntrblm/nox@main
      with:
        python-versions: "3.8"

    - name: Run mypy
      run: nox --session mypy

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: wntrblm/nox@main
      with:
        python-versions: "3.8"

    - name: Run coverage
      run: nox --session coverage
