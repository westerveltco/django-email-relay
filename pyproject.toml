[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Josh Thomas", email = "josh@joshthomas.dev"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "django>=3.2",
  "dj-database-url",
]
description = "A Django app to relay emails to a single address."
dynamic = ["version"]
keywords = []
license = "MIT"
name = "django-email-relay"
readme = "README.md"
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
  "black",
  "coverage[toml]",
  "hatch",
  "mypy",
  "nox",
  "pytest",
  "pytest-django",
  "pytest-randomly",
  "pytest-reverse",
  "pytest-xdist",
  "ruff",
]

[project.urls]
Documentation = "https://github.com/joshuadavidthomas/django-email-relay#readme"
Issues = "https://github.com/joshuadavidthomas/django-email-relay/issues"
Source = "https://github.com/joshuadavidthomas/django-email-relay"

[tool.hatch.build.targets.wheel]
packages = ["src/email_relay"]

[tool.hatch.version]
path = "src/email_relay/__init__.py"

[tool.black]
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''
include = '\.pyi?$'
line-length = 88

[tool.bumpver]
commit = true
commit_message = ":bookmark: bump version {old_version} -> {new_version}"
current_version = "2023.0"
push = false   # set to false for CI
tag = true
version_pattern = "YYYY.INC1"

[tool.bumpver.file_patterns]
"src/email_relay/__init__.py" = [
    '__version__ = "{version}"',
]

[tool.coverage.run]
omit = [
  "src/email_relay/*/migrations/*",
  "templates/*",
  "tests/*",
  "manage.py",
  "requirements.txt",
]
plugins = ["django_coverage_plugin"]
source = ["src/email_relay"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.mypy]
check_untyped_defs = true
files = [
  "src.email_relay",
]
no_implicit_optional = true
plugins = [
  "mypy_django_plugin.main",
]
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_errors = true
module = [
  "src.email_relay.*.migrations.*",
]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = []

[tool.mypy_django_plugin]
ignore_missing_model_attributes = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
django_find_project = false
pythonpath = ". src"
addopts = "--create-db -n auto --dist loadfile"
norecursedirs = ".* bin build dist *.egg htmlcov logs node_modules templates venv"
python_files = "tests.py test_*.py *_tests.py"

[tool.ruff]
ignore = ["E501", "E741"] # temporary
select = [
  "B", # flake8-bugbear
  "E", # Pycodestyle
  "F", # Pyflakes
  "I", # isort
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".github",
  ".hg",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "migrations",
  "node_modules",
  "static",
  "venv",
]

per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.isort]
force-single-line = true
known-first-party = ["email_relay"]
required-imports = ["from __future__ import annotations"]
